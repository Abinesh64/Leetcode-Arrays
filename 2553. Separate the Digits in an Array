SOL :1

class Solution {
public:
    vector<int> separateDigits(vector<int>& nums) {
        vector<int> answer;
        for(int i=0;i<nums.size();i++)
        {
            vector<int> temp;
            while(nums[i]!=0)
            {  
                temp.push_back(nums[i]%10);
                nums[i]/=10;
            }
            reverse(temp.begin(),temp.end());
            for(int j=0;j<temp.size();j++)
                answer.push_back(temp[j]);
        }
        return answer;
    }
};

SOL 2 : Using recursion
class Solution {
public:
    vector<int> separateDigits(vector<int>& nums) {
        vector<int> v;
        for(int i=0;i<nums.size();i++)
        {
            digit(v,nums[i]);
        }
    return v;
    }
    void digit(vector<int>& v,int x)
    {
        if(x==0)
        return ;
        int a=x%10;
        x=x/10;
        digit(v,x);
        v.push_back(a);
    }
    
};
